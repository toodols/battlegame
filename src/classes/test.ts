import { Entity } from "../entity";
import { Game, Player } from "../game";
import { heal } from "../item/abilities/heal";
import { rest } from "../item/abilities/rest";
import { stick } from "../item/weapons/stick";
import { fireball } from "../item/abilities/fireball";
import { woodenBow } from "../item/weapons/woodenBow";
import { rangerPassive } from "../item/statuses/rangerPassive";
import { zombieSpawnEgg } from "../item/consumables/zombieSpawnEgg";
import { chiliPeppers } from "../item/consumables/chiliPeppers";
import { crystalHeart } from "../item/equipment/crystalHeart";
import { wealthTalisman } from "../item/equipment/wealthTalisman";
import { reanimate } from "../item/abilities/reanimate";
import { puppeteerMask } from "../item/consumables/puppeteerMask";
import { energyDrink } from "../item/consumables/energyDrink";

export const test = (game: Game, player: Player) => {
	const entity = new Entity(game);
	entity.playerId = player.id;
	entity.name = player.name;
	entity.speed = 120;
	entity.health = 10;
	entity.maxHealth = 10;
	entity.maxEnergy = 100;
	entity.energy = 100;
	entity.addItem(stick.init(entity));
	entity.addItem(rest.init(entity));
	entity.addItem(reanimate.init(entity));
	entity.addItem(zombieSpawnEgg.init(entity));
	entity.addItem(chiliPeppers.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(crystalHeart.init(entity));
	entity.addItem(puppeteerMask.init(entity));
	entity.addItem(puppeteerMask.init(entity));
	entity.addItem(puppeteerMask.init(entity));
	entity.addItem(puppeteerMask.init(entity));
	entity.addItem(energyDrink.init(entity));
	entity.addItem(wealthTalisman.init(entity));
	entity.addItem(woodenBow.init(entity));
	entity.addItem(rangerPassive.init(entity));
	return entity;
};
